# Exercice 1 - D√©marrage Kafka pour tests basiques
# Script optimis√© pour Windows PowerShell

Write-Host "=== EXERCICE 1 - D√âMARRAGE KAFKA ===" -ForegroundColor Green
Write-Host "Date: $(Get-Date)" -ForegroundColor Yellow

# Configuration des chemins
$kafkaDir = "..\..\kafka_2.13-3.9.1"
$logsDir = "C:\tmp\kraft-combined-logs"

# V√©rification Java
Write-Host "`n1. V√©rification Java..." -ForegroundColor Cyan
try {
    $javaVersion = java -version 2>&1 | Select-Object -First 1
    Write-Host "‚úÖ Java trouv√©: $javaVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Java non trouv√©. Installez Java 8 ou plus r√©cent." -ForegroundColor Red
    exit 1
}

# G√©n√©ration d'un cluster-id si n√©cessaire
$clusterIdFile = "$kafkaDir\cluster-id.txt"
if (!(Test-Path $clusterIdFile)) {
    Write-Host "`n2. G√©n√©ration Cluster ID..." -ForegroundColor Cyan
    $clusterId = & java -cp "$kafkaDir\libs\*" kafka.tools.StorageTool random-uuid
    $clusterId | Out-File -FilePath $clusterIdFile -Encoding UTF8
    Write-Host "‚úÖ Cluster ID g√©n√©r√©: $clusterId" -ForegroundColor Green
} else {
    $clusterId = Get-Content $clusterIdFile
    Write-Host "`n2. Cluster ID existant: $clusterId" -ForegroundColor Green
}

# Format du stockage (si n√©cessaire)
if (!(Test-Path $logsDir)) {
    Write-Host "`n3. Formatage du stockage..." -ForegroundColor Cyan
    & java -Dkafka.logs.dir=$logsDir -cp "$kafkaDir\libs\*" kafka.tools.StorageTool format -t $clusterId -c "$kafkaDir\config\kraft\server.properties"
    Write-Host "‚úÖ Stockage format√©" -ForegroundColor Green
} else {
    Write-Host "`n3. Stockage d√©j√† format√©" -ForegroundColor Green
}

# D√©marrage Kafka
Write-Host "`n4. D√©marrage du serveur Kafka..." -ForegroundColor Cyan
Write-Host "üöÄ Kafka d√©marre en arri√®re-plan..." -ForegroundColor Yellow

# D√©marrage en arri√®re-plan avec redirection des logs
Start-Process -FilePath "java" -ArgumentList @(
    "-Dkafka.logs.dir=$logsDir",
    "-cp", "$kafkaDir\libs\*",
    "kafka.Kafka",
    "$kafkaDir\config\kraft\server.properties"
) -WindowStyle Hidden

# Attendre le d√©marrage
Write-Host "‚è≥ Attente du d√©marrage (15 secondes)..."
Start-Sleep -Seconds 15

# Test de connexion
Write-Host "`n5. Test de connexion..." -ForegroundColor Cyan
try {
    $testResult = & java -cp "$kafkaDir\libs\*" kafka.tools.ConsoleProducer --broker-list localhost:9092 --topic test-connection --timeout 5000 2>&1
    Write-Host "‚úÖ Kafka server op√©rationnel sur port 9092" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  V√©rifiez que Kafka d√©marre correctement" -ForegroundColor Yellow
}

Write-Host "`n=== KAFKA PR√äT POUR EXERCICE 1 ===" -ForegroundColor Green
Write-Host "Commandes utiles:" -ForegroundColor Cyan
Write-Host "- Cr√©er topic: .\create-topic.ps1 weather_stream" -ForegroundColor White
Write-Host "- Envoyer message: .\send-message.ps1" -ForegroundColor White
Write-Host "- Lire messages: .\read-messages.ps1 weather_stream" -ForegroundColor White